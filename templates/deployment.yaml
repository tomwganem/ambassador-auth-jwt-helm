---
apiVersion: apps/v1beta2
kind: Deployment
metadata:
  name: {{ template "ambassador-jwt-auth.fullname" . }}
  labels:
    app: {{ template "ambassador-jwt-auth.name" . }}
    chart: {{ template "ambassador-jwt-auth.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    {{- range $k, $v := .Values.labels }}
    {{ quote $k }}: {{ quote $v }}
    {{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "ambassador-jwt-auth.name" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ template "ambassador-jwt-auth.name" . }}
        release: {{ .Release.Name }}
        {{- if or .Values.blueGreen }}
        blueGreen: {{ .Values.blueGreen }}
        {{- end }}
    spec:
      containers:
      - name: {{ .Release.Name }}
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        ports:
        - containerPort: 3000
          protocol: TCP
        envFrom:
        - configMapRef:
            name: {{ template "ambassador-jwt-auth.fullname" . }}
        livenessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3
        readinessProbe:
          tcpSocket:
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 15
          timeoutSeconds: 3

        resources:
{{ toYaml .Values.resources | indent 10 }}
      {{- if .Values.image.pullSecret }}
      imagePullSecrets:
      - name: {{.Values.image.pullSecret }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
